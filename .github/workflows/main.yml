name: Fullstack CI/CD (on PR Merge)

# 'main' 브랜치로 향하는 Pull Request가 닫혔을 때 워크플로우 실행
on:
  pull_request:
    types: [closed]
    branches: [ "main" ]

jobs:
  # ================= JOB 1: 백엔드 빌드 =================
  build-backend:
    # PR이 'merged' 상태일 때만 이 Job을 실행
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build Backend with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build
        working-directory: backend

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/build/libs/*.jar

  # ================= JOB 2: 프론트엔드 빌드 =================
  build-frontend:
    # PR이 'merged' 상태일 때만 이 Job을 실행
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build Frontend with npm
        run: |
          npm ci
          npm run build
        working-directory: frontend

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/out

  # ================= JOB 3: 서버에 배포 =================
  deploy:
    # PR이 'merged' 상태일 때만 이 Job을 실행
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend] # 두 빌드가 모두 성공해야 실행
    steps:
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend-build

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          script: |
            # 백엔드 배포
            pgrep java | xargs kill -9 || true
            nohup java -jar -Dspring.profiles.active=prod *.jar > /dev/null 2>&1 &

            # 프론트엔드 배포
            sudo rm -rf /var/www/html/*
            sudo mv frontend-build/* /var/www/html/
